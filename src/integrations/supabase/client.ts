
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://kvmxzlrtfghidtosetal.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Imt2bXh6bHJ0ZmdoaWR0b3NldGFsIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDQ3MzMxMDcsImV4cCI6MjA2MDMwOTEwN30.V9Hj8yRia5ppbM6uW63zXWuUUKo9XtRYbbHmUmZPrhQ";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY);

// Helper function to search temples with better matching
export async function searchTemplesDirectly(query: string) {
  if (!query.trim()) return { data: [], error: null };
  
  // 검색어를 소문자로 변환하여 대소문자 구분 없이 검색
  const searchTerm = query.trim().toLowerCase();
  
  return await supabase
    .from('temples')
    .select('*')
    .or(`name.ilike.%${searchTerm}%,region.ilike.%${searchTerm}%,description.ilike.%${searchTerm}%`)
    .order('follower_count', { ascending: false });
}

// Helper function to search temple stays with better matching
export async function searchTempleStaysDirectly(query: string) {
  if (!query.trim()) return { data: [], error: null };
  
  // 검색어를 소문자로 변환하여 대소문자 구분 없이 검색
  const searchTerm = query.trim().toLowerCase();
  
  return await supabase
    .from('temple_stays')
    .select('*')
    .or(`name.ilike.%${searchTerm}%,region.ilike.%${searchTerm}%,description.ilike.%${searchTerm}%`)
    .order('follower_count', { ascending: false });
}
